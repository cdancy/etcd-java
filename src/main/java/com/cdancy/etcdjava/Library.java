package com.cdancy.etcdjava;


import co.cask.http.AbstractHttpHandler;
import co.cask.http.HttpResponder;
import co.cask.http.NettyHttpService;
import com.google.common.collect.ImmutableList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import org.jboss.netty.handler.codec.http.HttpRequest;
import org.jboss.netty.handler.codec.http.HttpResponseStatus;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'cdancy' at '10/6/16 4:49 PM' with Gradle 2.14.1
 *
 * @author cdancy, @date 10/6/16 4:49 PM
 */
public class Library {
    
    public static class PingHandler extends AbstractHttpHandler {
      @Path("/v1/ping")
      @GET
      public void testGet(HttpRequest request, HttpResponder responder){
        responder.sendString(HttpResponseStatus.OK, "OK");
      }
    }
    
    public static void main(String [] args) {
                // Setup HTTP service and add Handlers
        NettyHttpService service = NettyHttpService.builder("etcd-java")
                                   .setPort(7777)
                                   .addHttpHandlers(ImmutableList.of(new PingHandler()))
                                   .build();

        // Start the HTTP service
        service.startAndWait();
        try {
            Thread.sleep(100000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Library.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}


